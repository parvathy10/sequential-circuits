///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Module: D_flipflop_tb.v


// Testbench (should always be an empty module description)
module D_flipflop_tb;

// Define testbench internal signals 
// It is advised to give same names as the signals in the main module
// testbench
reg clk;
reg reset;
reg d;
wire q;
wire qbar;
  

//Instantiate the design under test
 DFF D_flipflop(clk, reset, d, q, reset)

D_flipflop D_flipflop_test(
  .clk(clk), 
  .reset(reset),
  .d(d),
  .q(q), 
  .qbar(qbar)
);
  
// Generate the test vectors
        
initial 
begin
  clk = 0;
  d = 1'bx;
  
  $display("Reset flop.");   
  reset = 1;
  show_values;        // Call a task (show_values) to wait for 1ns and display the input and outputs
    
  $display("Release reset.");
  d = 1;
  reset = 0;
  show_values;
  
  #7 d = 0;
  #13 d=1;
  #30 d = 1;
  
  $stop;
  $finish;
end
  
// 'Task' to display the current input and output values
// Note that 'function' can't be used since delay is being used
task show_values;
  #1 $display("d:%0h, q:%0h, qb:%0h", d, q, qbar);
endtask

always
  #5ns clk = ~clk;   // generate clock of 10 ns time period


endmodule
